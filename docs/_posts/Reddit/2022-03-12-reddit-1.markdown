---
layout: post
title: '독후감 #1 클린 아키텍처'
subtitle: 'by 로버트 C. 마틴'
date: 2022-04-11 22:22:00 +0900
categories: [Reddit]
---

## 첫 개시, 첫 게시

![실물](https://i.postimg.cc/5N80twpP/Kakao-Talk-20220419-113127818.jpg)  
멋진 구도가 딱히 생각이 안나서 차라리 매니악하게
{: .center}

양심고백, 3월 초 책을 다 읽고 11일 경에 독후감을 작성해야지 다짐하며 목차를 작성해 뒀으나, 그로부터 한 달이 훌쩍 넘은 상태에서 글을 시작하고 있다. 블로그 관련해서 들었던 조언 중에 "텀이 길어도 되니까 주기적으로 글을 작성하라"는 말씀이 있었는데... 아무튼 그 덕택에 기억이 온전하진 않다. 양해를 미리 구하고 시작하겠다.

## 첫 책

독후감을 어떻게 써야 할 지 상상만 하던 때 부터, 그 시작은 왜 이 책을 선택하였는가에 대해 정리하는 것으로 하고싶었다. 왜냐하면, 지금 내가 가진 책이 좀 많다. 좋은 기회가 있어서 개발 관련 서적을 잔뜩 구매할 수 있었고, 사실 좀 충동적으로 지른게 많긴 해. 그렇다면 프론트/백엔드/인프라/AI 장르 불문 다양한 책들 중에서 나는 왜 하필 클린 아키텍처를 첫 번째 책으로 결정했나. 정리해보자.

![야그니](https://i.postimg.cc/CKpQg523/yagni.png)  
최근 개인 프로젝트 하면서도 꾸준히 이러고 있다.
{: .center}

첫 번째, [의존성 주입을 주제로 한 글](https://anteater333.github.io/hack/2022/03/07/hack-the-terms-1.html)에서도 언급했지만, 내가 소프트웨어 개발이란 길을 걸으면서 조금이나마 관심을 가지고 있다고 말할 수 있을만한 분야는 **소프트웨어 공학**이다. 그 덕에 나는 어느 정도 이쁜 설계의 필요성에 대해 자각은 가지고 있는 것 같다. 그런데 내가 항상 무언가를 만들면서 머리를 싸매고 고민하는 것은, **"이게 좋은 패턴인가?"** 라는 걱정이다. 타고난 기질이 혼자 조용히 깨작대는 것인 나는, 지금 내가 만들어놓은 이 코드 덩어리가 보기에 이쁜 모양인지에 대해 객관적인 판단을 하는데에 많은 어려움을 겪고 있는 상황인 것이다.

둘째로, 나는 이것저것 하는걸 좋아한다. 소프트웨어 공학을 좋아하는 이유도 그런 점이라고 생각한다. 개발, 정확히는 **소프트웨어 개발** 이라는 것이 GUI가 달린 클라이언트 어플리케이션을 만드는 것일 수도 있고, 백엔드에서 동작할 서버 어플리케이션을 만드는 것일 수도 있다. 혹은 꼭 코드를 많이 작성하는 것 뿐만이 아니라 서비스를 위한 인프라를 구성하는 것도 개발일 수 있고, 데이터베이스를 주로 다루는 개발자도 있겠지. 아니면 다른 단위로 묶어볼 수도 있다. 인공지능, 블록체인, 게임, 웹서비스, 데이터 처리, 등등등등 이런 수많은 가능성이 있는 것이 개발이 아닐까. 그리고 이 가능성들의 최상위 공통점이 바로 "소프트웨어"라고 생각한다.  

나는 소프트웨어 개발자(지망생)로써 여러 개발 분야들을 이것저것 찔러보는 편이다. 웹 프론트도 해보고, 백엔드도 해보고, 작년엔 데이터 처리도 했고, 버킷리스트 중 하나는 게임 개발이고, 지금은 개인 프로젝트로 모바일 어플리케이션을 개발하고 있다. 이렇게 줏대없이 여러가지 해왔다 보니 일반적인 소프트웨어 설계에 대한 호기심이 생겨난 것 같다. 뭘 만들든 일단 소프트웨어인데, 소프트웨어 관점에서 잘 설계된 구조는 무엇일까? 싶었던 것이다.

[![밥아저씨](https://i.postimg.cc/htqb7DHY/robert.png)](https://www.google.com/search?q=Uncle+bob)
{: .center}

그리고 마지막으로, 내가 산 책 중에서 가장 유명했다. 잘 모르겠을땐 역시 유명한 쪽으로.

## 아키텍트

![아키텍트](https://i.postimg.cc/SQ9PZjGp/a.jpg)  
매트릭스도 이제는 낡긴 했어...
{: .center}

고등학생 시절 프로그래머가 되고 싶다고 주변 친구들에게 말하면 다음과 같은 놀림을 받을 수 있었다:
> *"요즘 프로그래머가 얼마나 힘든줄 알아? 어디 인력사무소 같은 곳에서 드럼통 모닥불 쬐며 기다리고 있다가 봉고차 한 대 와가지고 "2명 타요!" 하면 거기 실려가는 처지라고 하더라!"*   

물론 저 때가 2010년대 초였고, 알파고니 비트코인이니 하는 단어들은 왠만하면 접할 수 없던 시대였으니 어느 정도 시대적 상황을 감안해서 받아들일 만한 농담이라고 생각한다. 지금은 취업도 잘된다고 하고, 초봉도 높다고 하고 상황이 많이 좋아지긴 했다. 그럼에도 불구하고 저 *"Java 두명 타요!"* 조크(혹은 [개발자 최종 트리 농담](https://imgur.com/HNPLIb9))가 자조적으로 쓰이는 것을 아직도 가끔씩 발견할 수 있다. 시대가 아무리 발전하고 이 시장에 아무리 젖과 꿀이 흐르고 있다고 한들, 사실 프로그래머의 역할이 크게 바꼈다는 생각은 안든다. 이 책에서 정확히 이렇게 표현하고 있다.

> ... 우리는 환영받지 못할 사실, 즉 소프트웨어는 `급격히 발전하는 기술이 아니라는 진실과 마주하게 된다. ... 소프트웨어, 즉 컴퓨터 프로그램은 순차, 분기, 반복, 참조로 구성된다. 그 이상도 이하도 아니다.

알고리즘
내가 그저 코더일지 모른다는 불안
아키텍트에 대한 동경

아키텍트가 하는 바로 그 아키텍처란?
그렇다면 좋은 아키텍처란?

핵심
세부사항
선택을 미뤄라 - 프레임워크와 결혼하지 마라
클린 아키텍처

## 기억에 남는 내용

[다음 책 예고]


이거 내용도 넣기
https://techblog.woowahan.com/2647/