---
layout: post
title: "자잘한 도움말 #15 프로젝트 별로 노드 버전이 다를 때"
subtitle: "작업 디렉토리가 바뀔 때 마다 자동으로 노드 버전을 바꾸는 방법"
description: ""
date: 2024-04-07 17:40:00 +0900
categories: [Micro]
---

## TL;DR

- 



---

## 이하 그리 중요하진 않은 내용들

![일 많은 백수](https://i.postimg.cc/XqQQgQW3/temp-Image-PLY8-Np.avif)  
어라 이상하다.. 나 백수인데..
{: .center .w-1-quarter .rounded-edge-16}

아무래도 나는 Node.js와는 떼려야 뗄 수 없는 사이가 되어버린 것 같다. 요즘 웹 프론트엔드 개발 하려면 거의 대부분은 일단 Node.js 기반으로 프로젝트를 생성해야 하니깐. 나는 지금까지 여러 프로젝트를 진행해왔는데, 그 중에는 올해 초에 코드 작성을 시작한 것도 있고 몇 년 전에 시작되어서 아직까지 운영되며 내 재정을 책임져주는 것도 있다. 내 개발 PC에 공존하는 프로젝트들. 문제는 그 몇 년 전 프로젝트는 지금 기준으론 조금 까다로운 면이 있어서, 오래된 Node.js 버전을 요구한다는 점이다.

왠만하면 새로운 프로젝트에서는 최신 Node.js 버전을 쓰고 싶은데 옛날 프로젝트에 발목 잡히긴 싫어. [옛날 Node.js엔 `structuredClone()`도 없단 말야.](/micro/2023/12/10/micro-tip-13.html#tmi){:target="_blank"} 그럴 때 필요한 것이 이번 글이다. Node.js 버전을 관리하는 방법에 대하여.

### Node Version Manager

Node.js를 설치하는 방법 (공식 홈페이지?)

Version Manager의 등장

https://nodejs.org/en/download/package-manager  
공식 취급

http://nvm.sh
접속 안되는거 실화입니까

https://github.com/nvm-sh/logos
로고 필요하면 여기서

### `.nvmrc`와 `nvm use`

### 작업 디렉토리가 바뀔 때 마다 노드 버전 바꾸기

```sh
# nvm config
export NVM_DIR=~/.nvm
source $(brew --prefix nvm)/nvm.sh

# place this after nvm initialization!
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc
```
https://stackoverflow.com/questions/23556330/run-nvm-use-automatically-every-time-theres-a-nvmrc-file-on-the-directory

### fnm

Shell Setup

Environment variables need to be setup before you can start using fnm. This is done by evaluating the output of fnm env. To automatically run fnm use when a directory contains a .node-version or .nvmrc file, add the --use-on-cd option to your shell setup.

Adding a .node-version to your project is as simple as:

npm에서 yarn.. cra에서 vite.. nvm에서 fnm..

auto completion 추가하기 (글 내용 보고 넣을지 말지 판단하기)
```
mkdir -p ~/.config/zsh/completions

touch ~/.config/zsh/completions/_fnm

fnm completions --shell=zsh > ~/.config/zsh/completions/_fnm
```
```
fpath+=~/.config/zsh/completions/_fnm
autoload -Uz compinit
compinit
```

yarn이 사라졌어!

## 내가 배운 것

---

- 레퍼런스
- https://velog.io/@korany-lee/자동으로-nvm-use-해주는-script
- https://stackoverflow.com/questions/23556330/run-nvm-use-automatically-every-time-theres-a-nvmrc-file-on-the-directory

- 상당히 좋은 자료 - nvm vs fnm vs volta
https://pozafly.github.io/node/node-version-manager/


- 개발 경력이 쌓이다보니까 PC에 여러 node 버전이 산재하는구만
- 노드 버전 매니저에 대해서 간략하게. 이건 다들 알죠?
- 프로젝트별로 node 버전 다르게하기
    - .nvmrc
    - nvm use 하면 바로 파일 읽어서 환경 변경됨
    - 문제는 프로젝트 워크스페이스 열때마다 저래줘야함.
    - 위 zsh 버전 스크립트를 참고하자.