---
layout: post
title: '쿠버네티스'
date: 2021-10-31 18:20:00 +0900
categories: [Meta]
---

# 추후 다듬어서 포스팅하기

k8s 2회차  

시작전 사담. 기말고사 증후군.  
리스크와 이슈. 리스크는 예상 가능, 이슈는 예상 불가.

일정,  
~11/21  
(특강은 12월 15일까지 가능하다고 함.)  

# 아키텍쳐 리뷰 및 추가 정보
참고. master server는 보통 이미 제공되는 상용 솔루션을 사용한다.  
Master는 삼중화. 그 이유는 DB 때문. (데이터가 서로 다를 때 과반수 이상의 데이터가 맞다고 판단하기 위해 홀수)  
또한 이중화 했을 때 한 쪽이 망가졌다? 그럼 나머지 하나다 상용 서비스 다 돌릴건데 그 틈에 어떻게 죽은 DB를 복구하는가 문제.  

쿠버는 버전에 민감해서, 너무 새버전 따라갈 필요도 없음. 대신 공부는 최신버전  

# 실씁

## 리마인드
cf. remind. kubespray (자동화 쿠베 한방에 구축)  

중요. kubernetes scheduler
시퀀스 다이어그램은 항상 중요하다.  

우리 보고서 쓸 때도 중요할듯.  
엔드유저의 요청이 내부에서 어떻게 흘러가는것인가!

세팅중 포트열기 등등...  
AWS는 인스턴스 닫았다 열 때 마다 외부 연결 IP 바뀐다. 고정 IP 받으면 돈나감

gpgcheck  
멘토님의 썰.  
도커 이미지 묶어서 물리적으로 옮겨서 새로 실행시켰는데 퍼미션 오류가 떴다?  
SFTP로 파일 복사하다가 파일이 깨졌음  
gpg key, 파일의 해시를 추출해서 파일이 깨졌는지 파악할 수 있도록 하는 것.

## 노드 관리
- 실제 노드 상태 확인
- 노드 스케줄링 중단
- 노드 비우기(쿠버는 이관migration이 없다)
- 노드 삭제
- 노드 추가

## application 배포
기존 젠킨스 maven...  

kuber 환경에선 달라야된다.
kubectl create deployment nginx --image nginx:1.14
kubectl scale deployment nginx --replicas=3
...

# Pod
쿠버는 컨테이너보단 pod. 파드.  
컨테이너는 서비스 간의 isolation  
서비스의 리소스 격리

파드, 여러개의 컨테이너와 볼륨의 묶음  
컨테이너 사이의 결합도가 높은 것들도 있었을 것인데(볼륨, 네트워크 공유 했을텐데)  
서로간의 리소스를 그냥 공유할 수 있도록 묶어버리는 상위개념

근데 보통 파드당 컨테이너 하나, 쿠베에서는 따라서 컨테이너 대신 파드라고 한다.  

pod 안에는  Pause라는 infra container가 존재  
pause 컨테이너는 마치 부모 컨테이너 처럼 작용됨.  
link 기능을 통해서 리소스 공유

추가적으로, pause는 좀비 프로세스를 죽이는 기능을 포함한다.  
pause는 부모 프로세스의 기능을 가지고 있다.

CLI 방식으론 pod 배포 하진 않고, yaml 코드로 작성하는 것 실습 하였음  
```
apiVersion: v1
kind: Pod
metadata:
  name: nginx-pod
spec:
  containers:
   - name: nginx-container
     image: nginx:1.14
```

유용한 명령어
```
kubectl get pods -o yaml
```
우리가 설정한 정보 이외에 숨겨진 설정까지 다 출력해줌  
그런 속성들을 외우고 다닐 수 없으니까 이걸 yaml로 출력해서 확인 가능

### Pod 라벨링(중요)
```
metadata:
  labels:
    key1: value1
    key2: value2
```

파드에 라벨을 지정할 수 있다

```
kubectl get pods --show-labels
```

실무에선 라벨링에 대한 표준을 만든다.

파드 뿐만이 아니라 노드에도 label은 지정 가능
특정 워커노드에 gpu 여부를 지정한 다음, AI 모델 등 GPU가 필요한 파드는 해당 gpu 라벨이 true인 노드에 생성하도록 한다거나.  

### Liveness Probes (중요)
해시체크  
해시체크를 통과하지 못하면 해당 파드를 삭제하고 kubelet이 재생성

파드의 건강검진

lieveness 매커니즘  
 - httpGet (response status)
 - tcpSocker (port 오픈 여부)
 - exec (사용자 정의 쉘 스크립트를 통한 검증)

추가적으로 pod 실행 후 검증 유예delay 시간, 응답 대기 시간 등 옵션 추가 가능

한 번 출력되고 끝나는 로그를 간지나게 보는 명령어
```
watch -n 0.5 [로그 명령어]
```

# Kubernetes Controllers

Stateful sets  
쿠버 도입한다고 우리 서비스를 싹다 stateless로 바꿀 순 없어

